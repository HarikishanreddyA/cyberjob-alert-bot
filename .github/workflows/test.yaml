name: Test Job Alert Bot

on:
  workflow_dispatch:  # Manual trigger only for testing
  schedule:
    - cron: '0 */4 * * *'  # Run every 4 hours during testing

permissions:
  contents: write    # Required for pushing changes

jobs:
  test-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install git+https://github.com/speedyapply/JobSpy.git requests

      - name: Run test script
        run: python test_job_alert.py

      - name: Store job data as artifacts
        if: always()  # Run even if previous steps failed
        uses: actions/upload-artifact@v4.3.1  # Using latest stable version
        with:
          name: job-data-${{ github.run_number }}
          path: |
            test_seen_jobs.json
            test_filtered_jobs.json
          retention-days: 7
          if-no-files-found: warn

      - name: Install jq
        run: sudo apt-get install jq

      - name: Commit and push changes
        if: success()  # Only run if script succeeded
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          if [[ -n "$(git status --porcelain)" ]]; then
            # Add both JSON files
            git add test_seen_jobs.json test_filtered_jobs.json || true
            
            # Get current date for commit message
            DATE=$(date '+%Y-%m-%d %H:%M:%S')
            
            # Create detailed commit message
            echo "Test Run Results - ${DATE}" > commit_msg.txt
            echo "" >> commit_msg.txt
            echo "Updated Files:" >> commit_msg.txt
            echo "- test_seen_jobs.json" >> commit_msg.txt
            echo "- test_filtered_jobs.json" >> commit_msg.txt
            
            # Add statistics if available
            if [[ -f test_filtered_jobs.json ]]; then
              echo "" >> commit_msg.txt
              echo "Filter Statistics:" >> commit_msg.txt
              echo "$(jq '.filtered_jobs | length' test_filtered_jobs.json) jobs filtered" >> commit_msg.txt
            fi
            
            # Commit with the detailed message
            git commit -F commit_msg.txt
            
            # Push changes
            git push origin HEAD:main || echo "Failed to push changes"
          else
            echo "No changes to commit"
          fi

      - name: Cleanup old artifacts
        if: success()
        run: |
          # Keep only last 7 days of JSON files to prevent repository bloat
          find . -name "test_*.json" -type f -mtime +7 -exec git rm {} \; || true
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "Cleanup old job data files [skip ci]" || true
            git push origin HEAD:main || echo "Failed to push cleanup changes"
          fi 
